Assignment questions : 
1) what is props drilling and how to avoid it?
2) What is default props
Do it practically also
States in react :
-> State is used to store the data in the same component and update the data in the same component. 
-> State are mutable 
-> State can be read and write
    Syntax : 
        let {initial-value,function} = useState(initial-value)

    1)   What is Props Drilling and How to Avoid It?  
Props drilling is a situation in React where data (props) is passed down multiple levels from a parent component to a deeply nested child component, even though intermediate components do not need that data. This can make the code harder to manage and maintain.

       How to Avoid Props Drilling?  
To avoid props drilling, you can use:
1.   Context API   â€“ Allows you to share state globally without passing props manually at each level.
2.   State Management Libraries (Redux, Zustand, Recoil, etc.)   â€“ Manage global state efficiently.
3.   Component Composition   â€“ Structure components in a way that avoids unnecessary prop passing.
4.   Custom Hooks   â€“ Extract reusable logic into hooks to avoid deep prop passing.

       Example of Props Drilling  
   jsx
function App() {
  const user = "John Doe";
  return <Parent user={user} />;
}

function Parent({ user }) {
  return <Child user={user} />;
}

function Child({ user }) {
  return <GrandChild user={user} />;
}

function GrandChild({ user }) {
  return <h1>Hello, {user}!</h1>;
}
   
Here,  user  is passed through multiple components unnecessarily.

       Using Context API to Avoid Props Drilling  
   jsx
import React, { createContext, useContext } from "react";

const UserContext = createContext();

function App() {
  return (
    <UserContext.Provider value="John Doe">
      <GrandChild />
    </UserContext.Provider>
  );
}

function GrandChild() {
  const user = useContext(UserContext);
  return <h1>Hello, {user}!</h1>;
}
   
Now,  user  is directly accessed in  GrandChild  without being passed through intermediate components.

---

    2)   What are Default Props?  
Default props in React allow you to define default values for props in case they are not provided by the parent component. This helps prevent issues when required props are missing.

       Example of Default Props  
   jsx
function Greeting({ name }) {
  return <h1>Hello, {name}!</h1>;
}

// Setting default props
Greeting.defaultProps = {
  name: "Guest",
};

// Usage
function App() {
  return <Greeting />; // Since name is not provided, "Guest" will be used
}
   
       With Function Default Parameters (Modern Approach)  
   jsx
function Greeting({ name = "Guest" }) {
  return <h1>Hello, {name}!</h1>;
}
   
This approach provides a simpler way to set default values.

Let me know if you need further clarification! ðŸš€